/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GUI } from 'dat.gui'
import * as THREE from "three";
const fragmentShader = `
varying vec2 vUvs; 
uniform float u_time;
uniform vec3 color;
 
 
void main() {
  
  
  gl_FragColor = vec4(color, 1.0);
}

`;
 
const vertexShader = `
varying vec2 vUvs; 
void main() {
    vec4 localPosition = vec4(position, 1.0);
    gl_Position = projectionMatrix * modelViewMatrix * localPosition;
    vUvs = uv;
}
`


export default function Box(props) {
    const mesh = useRef();
    const geometryBaseColor = {
        hex: "#F2BA59"
      }

      const uniforms= { 
        color: { value: new THREE.Color(geometryBaseColor.hex) }
      }
    
     
      useEffect(() => {
        const gui =new GUI()
        const colorFolder = gui.addFolder("Color")
        // Hex Color Selector
        const color = colorFolder.addColor(geometryBaseColor, "hex")
        color.onChange((value) => {
          mesh.current.material.uniforms.color.value = new THREE.Color(value)
        })
      
        return () => {
          gui.destroy()
        }
      }, []);

    return (
      <mesh {...props} ref={mesh}>
        <boxGeometry args={[1, 1, 1]} />
      <shaderMaterial vertexShader={vertexShader} fragmentShader={fragmentShader} uniforms={uniforms}/>
      </mesh>
    );
}

 
